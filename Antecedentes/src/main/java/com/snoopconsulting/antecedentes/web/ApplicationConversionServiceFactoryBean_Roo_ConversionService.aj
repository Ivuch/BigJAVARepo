// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.snoopconsulting.antecedentes.web;

import com.snoopconsulting.antecedentes.domain.Grupo;
import com.snoopconsulting.antecedentes.domain.MonedaContrato;
import com.snoopconsulting.antecedentes.domain.Pais;
import com.snoopconsulting.antecedentes.domain.SBU;
import com.snoopconsulting.antecedentes.domain.Servicio;
import com.snoopconsulting.antecedentes.domain.Usuario;
import com.snoopconsulting.antecedentes.repository.jpa.GrupoRepository;
import com.snoopconsulting.antecedentes.repository.jpa.UsuarioRepository;
import com.snoopconsulting.antecedentes.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    GrupoRepository ApplicationConversionServiceFactoryBean.grupoRepository;
    
    @Autowired
    UsuarioRepository ApplicationConversionServiceFactoryBean.usuarioRepository;
    
    public Converter<Grupo, String> ApplicationConversionServiceFactoryBean.getGrupoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.snoopconsulting.antecedentes.domain.Grupo, java.lang.String>() {
            public String convert(Grupo grupo) {
                return new StringBuilder().append(grupo.getNombre()).toString();
            }
        };
    }
    
    public Converter<Long, Grupo> ApplicationConversionServiceFactoryBean.getIdToGrupoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.snoopconsulting.antecedentes.domain.Grupo>() {
            public com.snoopconsulting.antecedentes.domain.Grupo convert(java.lang.Long id) {
                return grupoRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Grupo> ApplicationConversionServiceFactoryBean.getStringToGrupoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.snoopconsulting.antecedentes.domain.Grupo>() {
            public com.snoopconsulting.antecedentes.domain.Grupo convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Grupo.class);
            }
        };
    }
    
    public Converter<MonedaContrato, String> ApplicationConversionServiceFactoryBean.getMonedaContratoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.snoopconsulting.antecedentes.domain.MonedaContrato, java.lang.String>() {
            public String convert(MonedaContrato monedaContrato) {
                return new StringBuilder().append(monedaContrato.getNombre()).toString();
            }
        };
    }
    
    public Converter<Pais, String> ApplicationConversionServiceFactoryBean.getPaisToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.snoopconsulting.antecedentes.domain.Pais, java.lang.String>() {
            public String convert(Pais pais) {
                return new StringBuilder().append(pais.getNombre()).toString();
            }
        };
    }
    
    public Converter<SBU, String> ApplicationConversionServiceFactoryBean.getSBUToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.snoopconsulting.antecedentes.domain.SBU, java.lang.String>() {
            public String convert(SBU sBU) {
                return new StringBuilder().append(sBU.getNombre()).toString();
            }
        };
    }
    
    public Converter<Servicio, String> ApplicationConversionServiceFactoryBean.getServicioToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.snoopconsulting.antecedentes.domain.Servicio, java.lang.String>() {
            public String convert(Servicio servicio) {
                return new StringBuilder().append(servicio.getNombre()).toString();
            }
        };
    }
    
    public Converter<Usuario, String> ApplicationConversionServiceFactoryBean.getUsuarioToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.snoopconsulting.antecedentes.domain.Usuario, java.lang.String>() {
            public String convert(Usuario usuario) {
                return new StringBuilder().append(usuario.getUsername()).append(' ').append(usuario.getNombre()).append(' ').append(usuario.getEmail()).append(' ').append(usuario.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, Usuario> ApplicationConversionServiceFactoryBean.getIdToUsuarioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.snoopconsulting.antecedentes.domain.Usuario>() {
            public com.snoopconsulting.antecedentes.domain.Usuario convert(java.lang.Long id) {
                return usuarioRepository.findOne(id);
            }
        };
    }
    
    public Converter<String, Usuario> ApplicationConversionServiceFactoryBean.getStringToUsuarioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.snoopconsulting.antecedentes.domain.Usuario>() {
            public com.snoopconsulting.antecedentes.domain.Usuario convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Usuario.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getGrupoToStringConverter());
        registry.addConverter(getIdToGrupoConverter());
        registry.addConverter(getStringToGrupoConverter());
        registry.addConverter(getMonedaContratoToStringConverter());
        registry.addConverter(getIdToMonedaContratoConverter());
        registry.addConverter(getStringToMonedaContratoConverter());
        registry.addConverter(getPaisToStringConverter());
        registry.addConverter(getIdToPaisConverter());
        registry.addConverter(getStringToPaisConverter());
        registry.addConverter(getSBUToStringConverter());
        registry.addConverter(getIdToSBUConverter());
        registry.addConverter(getStringToSBUConverter());
        registry.addConverter(getServicioToStringConverter());
        registry.addConverter(getIdToServicioConverter());
        registry.addConverter(getStringToServicioConverter());
        registry.addConverter(getUsuarioToStringConverter());
        registry.addConverter(getIdToUsuarioConverter());
        registry.addConverter(getStringToUsuarioConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
